// <auto-generated />
using System;
using Metro_Ticket_Booking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Metro_Ticket_Booking.Migrations
{
    [DbContext(typeof(MetroTicketContext))]
    partial class MetroTicketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdminId")
                        .HasName("PK_Admins");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Complaint", b =>
                {
                    b.Property<int>("ComplaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ComplaintId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RepliedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Reply")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ComplaintId")
                        .HasName("PK_Complaints");

                    b.HasIndex("UserId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Metro", b =>
                {
                    b.Property<int>("MetroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MetroId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MetroId")
                        .HasName("PK_Metros");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Metros");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.MetroCard", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CardId"));

                    b.Property<DateTime?>("ApplicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<string>("CardStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameOnCard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CardId")
                        .HasName("PK_MetroCards");

                    b.HasIndex("UserId");

                    b.ToTable("MetroCards");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasDefaultValue("INR")
                        .IsFixedLength();

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RazorpayOrderId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazorpayPaymentId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazorpaySignature")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId")
                        .HasName("PK_Payments");

                    b.HasIndex("TicketId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<int>("EndStationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int");

                    b.HasKey("RouteId")
                        .HasName("PK_Routes");

                    b.HasIndex("EndStationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StartStationId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("StationId")
                        .HasName("PK_Stations");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("FromStationId")
                        .HasColumnType("int");

                    b.Property<int>("MetroId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("TicketCount")
                        .HasColumnType("int");

                    b.Property<int>("ToStationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TicketId")
                        .HasName("PK_Tickets");

                    b.HasIndex("FromStationId");

                    b.HasIndex("MetroId");

                    b.HasIndex("RouteId");

                    b.HasIndex("ToStationId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Gender")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .IsFixedLength();

                    b.Property<int?>("LoyaltyPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.HasKey("UserId")
                        .HasName("PK_Users");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Complaint", b =>
                {
                    b.HasOne("Metro_Ticket_Booking.Models.User", "User")
                        .WithMany("Complaints")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Complaints_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.MetroCard", b =>
                {
                    b.HasOne("Metro_Ticket_Booking.Models.User", "User")
                        .WithMany("MetroCards")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_MetroCards_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Payment", b =>
                {
                    b.HasOne("Metro_Ticket_Booking.Models.Ticket", "Ticket")
                        .WithMany("Payments")
                        .HasForeignKey("TicketId")
                        .IsRequired()
                        .HasConstraintName("FK_Payments_Ticket");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Route", b =>
                {
                    b.HasOne("Metro_Ticket_Booking.Models.Station", "EndStation")
                        .WithMany("RouteEndStations")
                        .HasForeignKey("EndStationId")
                        .IsRequired()
                        .HasConstraintName("FK_Routes_EndStation");

                    b.HasOne("Metro_Ticket_Booking.Models.Station", "StartStation")
                        .WithMany("RouteStartStations")
                        .HasForeignKey("StartStationId")
                        .IsRequired()
                        .HasConstraintName("FK_Routes_StartStation");

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Ticket", b =>
                {
                    b.HasOne("Metro_Ticket_Booking.Models.Station", "FromStation")
                        .WithMany("TicketFromStations")
                        .HasForeignKey("FromStationId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_FromStation");

                    b.HasOne("Metro_Ticket_Booking.Models.Metro", "Metro")
                        .WithMany("Tickets")
                        .HasForeignKey("MetroId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_Metro");

                    b.HasOne("Metro_Ticket_Booking.Models.Route", "Route")
                        .WithMany("Tickets")
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_Route");

                    b.HasOne("Metro_Ticket_Booking.Models.Station", "ToStation")
                        .WithMany("TicketToStations")
                        .HasForeignKey("ToStationId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_ToStation");

                    b.HasOne("Metro_Ticket_Booking.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_User");

                    b.Navigation("FromStation");

                    b.Navigation("Metro");

                    b.Navigation("Route");

                    b.Navigation("ToStation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Metro", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Route", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Station", b =>
                {
                    b.Navigation("RouteEndStations");

                    b.Navigation("RouteStartStations");

                    b.Navigation("TicketFromStations");

                    b.Navigation("TicketToStations");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.Ticket", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Metro_Ticket_Booking.Models.User", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("MetroCards");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
