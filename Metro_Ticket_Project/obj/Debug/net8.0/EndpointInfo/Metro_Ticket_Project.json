{
  "openapi": "3.0.4",
  "info": {
    "title": "Metro Operations Management API",
    "version": "v1"
  },
  "paths": {
    "/api/Admin/sign_in": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/issueCards": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/issueCard/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/complaints": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/replyToComplaint/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyToComplaint"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyToComplaint"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyToComplaint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/book_ticket/journey_planner": {
      "post": {
        "tags": [
          "Booking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/book_ticket/orders": {
      "post": {
        "tags": [
          "Booking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/complaints": {
      "post": {
        "tags": [
          "Complaint"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/complaints/register_complaint": {
      "post": {
        "tags": [
          "Complaint"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/fare_and_schedule/fare/{id}": {
      "get": {
        "tags": [
          "FareAndSchedule"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/fare_and_schedule/schedule/{id}": {
      "get": {
        "tags": [
          "FareAndSchedule"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/metro_card/request_card": {
      "post": {
        "tags": [
          "MetroCard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetroCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MetroCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MetroCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/metro_card/card_authenticate": {
      "post": {
        "tags": [
          "MetroCard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/metro_card/card_recharge": {
      "put": {
        "tags": [
          "MetroCard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/metro_card/card": {
      "post": {
        "tags": [
          "MetroCard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/sign_in": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/sign_up": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/history/save": {
      "post": {
        "tags": [
          "UserHistory"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/history/display": {
      "post": {
        "tags": [
          "UserHistory"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ComplaintRequest": {
        "required": [
          "address",
          "email",
          "message",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "format": "tel"
          },
          "message": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MetroCardRequest": {
        "required": [
          "iCard",
          "pin",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "minLength": 1,
            "type": "string"
          },
          "iCard": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "pin": {
            "maximum": 9999,
            "minimum": 1000,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RechargeRequest": {
        "required": [
          "amount",
          "cardNo",
          "pin"
        ],
        "type": "object",
        "properties": {
          "cardNo": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "pin": {
            "maximum": 9999,
            "minimum": 1000,
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RegisterRequest": {
        "required": [
          "address",
          "dateOfBirth",
          "email",
          "gender",
          "name",
          "password",
          "phone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "format": "tel"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "minLength": 1,
            "pattern": "^(Male|Female|Other)$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReplyToComplaint": {
        "required": [
          "messageString"
        ],
        "type": "object",
        "properties": {
          "messageString": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TicketRequest": {
        "required": [
          "destinationId",
          "isReturnJourney",
          "quantity",
          "sourceId"
        ],
        "type": "object",
        "properties": {
          "sourceId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "destinationId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "isReturnJourney": {
            "type": "boolean"
          },
          "isJourneyType": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TransactionRequest": {
        "required": [
          "amount",
          "destination",
          "email",
          "paymentId",
          "source",
          "status",
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "transactionType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "paymentId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "source": {
            "type": "integer",
            "format": "int32"
          },
          "destination": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "UserEmailRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      }
    }
  }
}